### YamlMime:ManagedReference
items:
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog"
  id: "PartnerLog"
  parent: "com.microsoft.store.partnercenter.logging"
  children:
  - "com.microsoft.store.partnercenter.logging.PartnerLog.getInstance()"
  - "com.microsoft.store.partnercenter.logging.PartnerLog.getLoggers()"
  - "com.microsoft.store.partnercenter.logging.PartnerLog.logError(java.lang.String)"
  - "com.microsoft.store.partnercenter.logging.PartnerLog.logInformation(java.lang.String)"
  - "com.microsoft.store.partnercenter.logging.PartnerLog.logWarning(java.lang.String)"
  langs:
  - "java"
  name: "PartnerLog"
  nameWithType: "PartnerLog"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog"
  type: "Class"
  package: "com.microsoft.store.partnercenter.logging"
  summary: "Use this class for logging messages. This class supports pluggable loggers."
  syntax:
    content: "public class PartnerLog implements ILogger"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.store.partnercenter.logging.ILogger"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.PartnerLog()"
  id: "PartnerLog()"
  parent: "com.microsoft.store.partnercenter.logging.PartnerLog"
  langs:
  - "java"
  name: "PartnerLog()"
  nameWithType: "PartnerLog.PartnerLog()"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.PartnerLog()"
  overload: "com.microsoft.store.partnercenter.logging.PartnerLog.PartnerLog*"
  type: "Constructor"
  package: "com.microsoft.store.partnercenter.logging"
  summary: "Prevents a default instance of the LogManager class from being created."
  syntax:
    content: "private PartnerLog()"
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.getInstance()"
  id: "getInstance()"
  parent: "com.microsoft.store.partnercenter.logging.PartnerLog"
  langs:
  - "java"
  name: "getInstance()"
  nameWithType: "PartnerLog.getInstance()"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.getInstance()"
  overload: "com.microsoft.store.partnercenter.logging.PartnerLog.getInstance*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.logging"
  summary: "Gets the singleton log manager instance."
  syntax:
    content: "public static PartnerLog getInstance()"
    return:
      type: "com.microsoft.store.partnercenter.logging.PartnerLog"
      description: "An instance of the log manager."
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.getLoggers()"
  id: "getLoggers()"
  parent: "com.microsoft.store.partnercenter.logging.PartnerLog"
  langs:
  - "java"
  name: "getLoggers()"
  nameWithType: "PartnerLog.getLoggers()"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.getLoggers()"
  overload: "com.microsoft.store.partnercenter.logging.PartnerLog.getLoggers*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.logging"
  summary: "Gets the registered loggers collection. You can add your custom loggers here."
  syntax:
    content: "public List<ILogger> getLoggers()"
    return:
      type: "java.util.List<com.microsoft.store.partnercenter.logging.ILogger>"
      description: "The registered loggers collection."
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.logError(java.lang.String)"
  id: "logError(java.lang.String)"
  parent: "com.microsoft.store.partnercenter.logging.PartnerLog"
  langs:
  - "java"
  name: "logError(String message)"
  nameWithType: "PartnerLog.logError(String message)"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.logError(String message)"
  overload: "com.microsoft.store.partnercenter.logging.PartnerLog.logError*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.logging"
  summary: "Logs an error."
  syntax:
    content: "public void logError(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "The error message."
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.logInformation(java.lang.String)"
  id: "logInformation(java.lang.String)"
  parent: "com.microsoft.store.partnercenter.logging.PartnerLog"
  langs:
  - "java"
  name: "logInformation(String message)"
  nameWithType: "PartnerLog.logInformation(String message)"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.logInformation(String message)"
  overload: "com.microsoft.store.partnercenter.logging.PartnerLog.logInformation*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.logging"
  summary: "Logs a piece of information."
  syntax:
    content: "public void logInformation(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "The informational message."
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.logWarning(java.lang.String)"
  id: "logWarning(java.lang.String)"
  parent: "com.microsoft.store.partnercenter.logging.PartnerLog"
  langs:
  - "java"
  name: "logWarning(String message)"
  nameWithType: "PartnerLog.logWarning(String message)"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.logWarning(String message)"
  overload: "com.microsoft.store.partnercenter.logging.PartnerLog.logWarning*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.logging"
  summary: "Logs a warning."
  syntax:
    content: "public void logWarning(String message)"
    parameters:
    - id: "message"
      type: "java.lang.String"
      description: "The warning message."
references:
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.PartnerLog*"
  name: "PartnerLog"
  nameWithType: "PartnerLog.PartnerLog"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.PartnerLog"
  package: "com.microsoft.store.partnercenter.logging"
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.getInstance*"
  name: "getInstance"
  nameWithType: "PartnerLog.getInstance"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.getInstance"
  package: "com.microsoft.store.partnercenter.logging"
- uid: "java.util.List<com.microsoft.store.partnercenter.logging.ILogger>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.microsoft.store.partnercenter.logging.ILogger"
    name: "ILogger"
    fullName: "com.microsoft.store.partnercenter.logging.ILogger"
  - name: ">"
    fullName: ">"
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.getLoggers*"
  name: "getLoggers"
  nameWithType: "PartnerLog.getLoggers"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.getLoggers"
  package: "com.microsoft.store.partnercenter.logging"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.logInformation*"
  name: "logInformation"
  nameWithType: "PartnerLog.logInformation"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.logInformation"
  package: "com.microsoft.store.partnercenter.logging"
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.logWarning*"
  name: "logWarning"
  nameWithType: "PartnerLog.logWarning"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.logWarning"
  package: "com.microsoft.store.partnercenter.logging"
- uid: "com.microsoft.store.partnercenter.logging.PartnerLog.logError*"
  name: "logError"
  nameWithType: "PartnerLog.logError"
  fullName: "com.microsoft.store.partnercenter.logging.PartnerLog.logError"
  package: "com.microsoft.store.partnercenter.logging"
- uid: "com.microsoft.store.partnercenter.logging.ILogger"
  name: "ILogger"
  nameWithType: "ILogger"
  fullName: "com.microsoft.store.partnercenter.logging.ILogger"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
