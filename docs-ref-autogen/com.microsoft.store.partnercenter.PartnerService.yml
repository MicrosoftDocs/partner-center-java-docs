### YamlMime:ManagedReference
items:
- uid: "com.microsoft.store.partnercenter.PartnerService"
  id: "PartnerService"
  parent: "com.microsoft.store.partnercenter"
  children:
  - "com.microsoft.store.partnercenter.PartnerService.clearProxyOptions()"
  - "com.microsoft.store.partnercenter.PartnerService.createPartnerOperations(com.microsoft.store.partnercenter.IPartnerCredentials)"
  - "com.microsoft.store.partnercenter.PartnerService.getApiRootUrl()"
  - "com.microsoft.store.partnercenter.PartnerService.getApplicationName()"
  - "com.microsoft.store.partnercenter.PartnerService.getConfiguration()"
  - "com.microsoft.store.partnercenter.PartnerService.getFactory()"
  - "com.microsoft.store.partnercenter.PartnerService.getInstance()"
  - "com.microsoft.store.partnercenter.PartnerService.getPartnerServiceApiVersion()"
  - "com.microsoft.store.partnercenter.PartnerService.getProxyHostName()"
  - "com.microsoft.store.partnercenter.PartnerService.getProxyPort()"
  - "com.microsoft.store.partnercenter.PartnerService.getRefreshCredentialsHandler()"
  - "com.microsoft.store.partnercenter.PartnerService.getSdkVersion()"
  - "com.microsoft.store.partnercenter.PartnerService.setApiRootUrl(java.lang.String)"
  - "com.microsoft.store.partnercenter.PartnerService.setFactory(com.microsoft.store.partnercenter.factory.IPartnerFactory)"
  - "com.microsoft.store.partnercenter.PartnerService.setProxyOptions(java.lang.String,java.lang.Integer)"
  - "com.microsoft.store.partnercenter.PartnerService.setRefreshCredentialsHandler(com.microsoft.store.partnercenter.IPartnerCredentials)"
  langs:
  - "java"
  name: "PartnerService"
  nameWithType: "PartnerService"
  fullName: "com.microsoft.store.partnercenter.PartnerService"
  type: "Class"
  package: "com.microsoft.store.partnercenter"
  summary: "This class contains the partner SDK properties and acts as the main entry point to create partners."
  syntax:
    content: "public class PartnerService"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.store.partnercenter.PartnerService.PartnerService()"
  id: "PartnerService()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "PartnerService()"
  nameWithType: "PartnerService.PartnerService()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.PartnerService()"
  overload: "com.microsoft.store.partnercenter.PartnerService.PartnerService*"
  type: "Constructor"
  package: "com.microsoft.store.partnercenter"
  summary: "Prevents a default instance of the PartnerService class from being created."
  syntax:
    content: "private PartnerService()"
- uid: "com.microsoft.store.partnercenter.PartnerService.clearProxyOptions()"
  id: "clearProxyOptions()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "clearProxyOptions()"
  nameWithType: "PartnerService.clearProxyOptions()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.clearProxyOptions()"
  overload: "com.microsoft.store.partnercenter.PartnerService.clearProxyOptions*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: "public void clearProxyOptions()"
- uid: "com.microsoft.store.partnercenter.PartnerService.createPartnerOperations(com.microsoft.store.partnercenter.IPartnerCredentials)"
  id: "createPartnerOperations(com.microsoft.store.partnercenter.IPartnerCredentials)"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "createPartnerOperations(IPartnerCredentials credentials)"
  nameWithType: "PartnerService.createPartnerOperations(IPartnerCredentials credentials)"
  fullName: "com.microsoft.store.partnercenter.PartnerService.createPartnerOperations(IPartnerCredentials credentials)"
  overload: "com.microsoft.store.partnercenter.PartnerService.createPartnerOperations*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  summary: "Creates a <xref uid=\"com.microsoft.store.partnercenter.IPartner\" data-throw-if-not-resolved=\"false\">IPartner</xref> instance and configures it using the provided partner credentials."
  syntax:
    content: "public IAggregatePartner createPartnerOperations(IPartnerCredentials credentials)"
    parameters:
    - id: "credentials"
      type: "com.microsoft.store.partnercenter.IPartnerCredentials"
      description: "The partner credentials."
    return:
      type: "com.microsoft.store.partnercenter.IAggregatePartner"
      description: "A configured partner operations object."
- uid: "com.microsoft.store.partnercenter.PartnerService.getApiRootUrl()"
  id: "getApiRootUrl()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getApiRootUrl()"
  nameWithType: "PartnerService.getApiRootUrl()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getApiRootUrl()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getApiRootUrl*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  summary: "Gets the API root URL."
  syntax:
    content: "public String getApiRootUrl()"
    return:
      type: "java.lang.String"
      description: "The API root URL."
- uid: "com.microsoft.store.partnercenter.PartnerService.getApplicationName()"
  id: "getApplicationName()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getApplicationName()"
  nameWithType: "PartnerService.getApplicationName()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getApplicationName()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getApplicationName*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: "public String getApplicationName()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.store.partnercenter.PartnerService.getConfiguration()"
  id: "getConfiguration()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getConfiguration()"
  nameWithType: "PartnerService.getConfiguration()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getConfiguration()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getConfiguration*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  summary: "Gets the partner service configuration."
  syntax:
    content: "public Configuration getConfiguration()"
    return:
      type: "com.microsoft.store.partnercenter.configuration.Configuration"
      description: "The partner service configuration."
- uid: "com.microsoft.store.partnercenter.PartnerService.getFactory()"
  id: "getFactory()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getFactory()"
  nameWithType: "PartnerService.getFactory()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getFactory()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getFactory*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: "public IPartnerFactory getFactory()"
    return:
      type: "com.microsoft.store.partnercenter.factory.IPartnerFactory"
- uid: "com.microsoft.store.partnercenter.PartnerService.getInstance()"
  id: "getInstance()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getInstance()"
  nameWithType: "PartnerService.getInstance()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getInstance()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getInstance*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  summary: "Gets an instance of the partner service."
  syntax:
    content: "public static PartnerService getInstance()"
    return:
      type: "com.microsoft.store.partnercenter.PartnerService"
      description: "An instance of the partner service."
- uid: "com.microsoft.store.partnercenter.PartnerService.getPartnerServiceApiVersion()"
  id: "getPartnerServiceApiVersion()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getPartnerServiceApiVersion()"
  nameWithType: "PartnerService.getPartnerServiceApiVersion()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getPartnerServiceApiVersion()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getPartnerServiceApiVersion*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  summary: "Gets the partner service API version."
  syntax:
    content: "public String getPartnerServiceApiVersion()"
    return:
      type: "java.lang.String"
      description: "The partner service API version."
- uid: "com.microsoft.store.partnercenter.PartnerService.getProxyHostName()"
  id: "getProxyHostName()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getProxyHostName()"
  nameWithType: "PartnerService.getProxyHostName()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getProxyHostName()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getProxyHostName*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: "public String getProxyHostName()"
    return:
      type: "java.lang.String"
- uid: "com.microsoft.store.partnercenter.PartnerService.getProxyPort()"
  id: "getProxyPort()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getProxyPort()"
  nameWithType: "PartnerService.getProxyPort()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getProxyPort()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getProxyPort*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: "public Integer getProxyPort()"
    return:
      type: "java.lang.Integer"
- uid: "com.microsoft.store.partnercenter.PartnerService.getRefreshCredentialsHandler()"
  id: "getRefreshCredentialsHandler()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getRefreshCredentialsHandler()"
  nameWithType: "PartnerService.getRefreshCredentialsHandler()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getRefreshCredentialsHandler()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getRefreshCredentialsHandler*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: "public IPartnerCredentials getRefreshCredentialsHandler()"
    return:
      type: "com.microsoft.store.partnercenter.IPartnerCredentials"
- uid: "com.microsoft.store.partnercenter.PartnerService.getSdkVersion()"
  id: "getSdkVersion()"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "getSdkVersion()"
  nameWithType: "PartnerService.getSdkVersion()"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getSdkVersion()"
  overload: "com.microsoft.store.partnercenter.PartnerService.getSdkVersion*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  summary: "Gets the SDK version."
  syntax:
    content: "public String getSdkVersion()"
    return:
      type: "java.lang.String"
      description: "The SDK version."
- uid: "com.microsoft.store.partnercenter.PartnerService.setApiRootUrl(java.lang.String)"
  id: "setApiRootUrl(java.lang.String)"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "setApiRootUrl(String value)"
  nameWithType: "PartnerService.setApiRootUrl(String value)"
  fullName: "com.microsoft.store.partnercenter.PartnerService.setApiRootUrl(String value)"
  overload: "com.microsoft.store.partnercenter.PartnerService.setApiRootUrl*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  summary: "Sets the API root URL."
  syntax:
    content: "public void setApiRootUrl(String value)"
    parameters:
    - id: "value"
      type: "java.lang.String"
      description: "The API root URL."
- uid: "com.microsoft.store.partnercenter.PartnerService.setFactory(com.microsoft.store.partnercenter.factory.IPartnerFactory)"
  id: "setFactory(com.microsoft.store.partnercenter.factory.IPartnerFactory)"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "setFactory(IPartnerFactory value)"
  nameWithType: "PartnerService.setFactory(IPartnerFactory value)"
  fullName: "com.microsoft.store.partnercenter.PartnerService.setFactory(IPartnerFactory value)"
  overload: "com.microsoft.store.partnercenter.PartnerService.setFactory*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: " void setFactory(IPartnerFactory value)"
    parameters:
    - id: "value"
      type: "com.microsoft.store.partnercenter.factory.IPartnerFactory"
- uid: "com.microsoft.store.partnercenter.PartnerService.setProxyOptions(java.lang.String,java.lang.Integer)"
  id: "setProxyOptions(java.lang.String,java.lang.Integer)"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "setProxyOptions(String hostName, Integer port)"
  nameWithType: "PartnerService.setProxyOptions(String hostName, Integer port)"
  fullName: "com.microsoft.store.partnercenter.PartnerService.setProxyOptions(String hostName, Integer port)"
  overload: "com.microsoft.store.partnercenter.PartnerService.setProxyOptions*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: "public void setProxyOptions(String hostName, Integer port)"
    parameters:
    - id: "hostName"
      type: "java.lang.String"
    - id: "port"
      type: "java.lang.Integer"
- uid: "com.microsoft.store.partnercenter.PartnerService.setRefreshCredentialsHandler(com.microsoft.store.partnercenter.IPartnerCredentials)"
  id: "setRefreshCredentialsHandler(com.microsoft.store.partnercenter.IPartnerCredentials)"
  parent: "com.microsoft.store.partnercenter.PartnerService"
  langs:
  - "java"
  name: "setRefreshCredentialsHandler(IPartnerCredentials partnerCredentials)"
  nameWithType: "PartnerService.setRefreshCredentialsHandler(IPartnerCredentials partnerCredentials)"
  fullName: "com.microsoft.store.partnercenter.PartnerService.setRefreshCredentialsHandler(IPartnerCredentials partnerCredentials)"
  overload: "com.microsoft.store.partnercenter.PartnerService.setRefreshCredentialsHandler*"
  type: "Method"
  package: "com.microsoft.store.partnercenter"
  syntax:
    content: "public void setRefreshCredentialsHandler(IPartnerCredentials partnerCredentials)"
    parameters:
    - id: "partnerCredentials"
      type: "com.microsoft.store.partnercenter.IPartnerCredentials"
references:
- uid: "com.microsoft.store.partnercenter.PartnerService.PartnerService*"
  name: "PartnerService"
  nameWithType: "PartnerService.PartnerService"
  fullName: "com.microsoft.store.partnercenter.PartnerService.PartnerService"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.getInstance*"
  name: "getInstance"
  nameWithType: "PartnerService.getInstance"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getInstance"
  package: "com.microsoft.store.partnercenter"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.store.partnercenter.PartnerService.getApiRootUrl*"
  name: "getApiRootUrl"
  nameWithType: "PartnerService.getApiRootUrl"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getApiRootUrl"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.setApiRootUrl*"
  name: "setApiRootUrl"
  nameWithType: "PartnerService.setApiRootUrl"
  fullName: "com.microsoft.store.partnercenter.PartnerService.setApiRootUrl"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.getPartnerServiceApiVersion*"
  name: "getPartnerServiceApiVersion"
  nameWithType: "PartnerService.getPartnerServiceApiVersion"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getPartnerServiceApiVersion"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.getApplicationName*"
  name: "getApplicationName"
  nameWithType: "PartnerService.getApplicationName"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getApplicationName"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.configuration.Configuration"
  name: "Configuration"
  nameWithType: "Configuration"
  fullName: "com.microsoft.store.partnercenter.configuration.Configuration"
- uid: "com.microsoft.store.partnercenter.PartnerService.getConfiguration*"
  name: "getConfiguration"
  nameWithType: "PartnerService.getConfiguration"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getConfiguration"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.factory.IPartnerFactory"
  name: "IPartnerFactory"
  nameWithType: "IPartnerFactory"
  fullName: "com.microsoft.store.partnercenter.factory.IPartnerFactory"
- uid: "com.microsoft.store.partnercenter.PartnerService.getFactory*"
  name: "getFactory"
  nameWithType: "PartnerService.getFactory"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getFactory"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.setFactory*"
  name: "setFactory"
  nameWithType: "PartnerService.setFactory"
  fullName: "com.microsoft.store.partnercenter.PartnerService.setFactory"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.IPartnerCredentials"
  name: "IPartnerCredentials"
  nameWithType: "IPartnerCredentials"
  fullName: "com.microsoft.store.partnercenter.IPartnerCredentials"
- uid: "com.microsoft.store.partnercenter.PartnerService.getRefreshCredentialsHandler*"
  name: "getRefreshCredentialsHandler"
  nameWithType: "PartnerService.getRefreshCredentialsHandler"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getRefreshCredentialsHandler"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.setRefreshCredentialsHandler*"
  name: "setRefreshCredentialsHandler"
  nameWithType: "PartnerService.setRefreshCredentialsHandler"
  fullName: "com.microsoft.store.partnercenter.PartnerService.setRefreshCredentialsHandler"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.getProxyHostName*"
  name: "getProxyHostName"
  nameWithType: "PartnerService.getProxyHostName"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getProxyHostName"
  package: "com.microsoft.store.partnercenter"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.microsoft.store.partnercenter.PartnerService.getProxyPort*"
  name: "getProxyPort"
  nameWithType: "PartnerService.getProxyPort"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getProxyPort"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.getSdkVersion*"
  name: "getSdkVersion"
  nameWithType: "PartnerService.getSdkVersion"
  fullName: "com.microsoft.store.partnercenter.PartnerService.getSdkVersion"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.setProxyOptions*"
  name: "setProxyOptions"
  nameWithType: "PartnerService.setProxyOptions"
  fullName: "com.microsoft.store.partnercenter.PartnerService.setProxyOptions"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.PartnerService.clearProxyOptions*"
  name: "clearProxyOptions"
  nameWithType: "PartnerService.clearProxyOptions"
  fullName: "com.microsoft.store.partnercenter.PartnerService.clearProxyOptions"
  package: "com.microsoft.store.partnercenter"
- uid: "com.microsoft.store.partnercenter.IAggregatePartner"
  name: "IAggregatePartner"
  nameWithType: "IAggregatePartner"
  fullName: "com.microsoft.store.partnercenter.IAggregatePartner"
- uid: "com.microsoft.store.partnercenter.PartnerService.createPartnerOperations*"
  name: "createPartnerOperations"
  nameWithType: "PartnerService.createPartnerOperations"
  fullName: "com.microsoft.store.partnercenter.PartnerService.createPartnerOperations"
  package: "com.microsoft.store.partnercenter"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
