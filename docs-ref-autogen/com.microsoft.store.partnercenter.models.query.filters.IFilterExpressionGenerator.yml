### YamlMime:ManagedReference
items:
- uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
  id: "IFilterExpressionGenerator"
  parent: "com.microsoft.store.partnercenter.models.query.filters"
  children:
  - "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateCompoundExpression(java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation,java.lang.String)"
  - "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateSimpleExpression(java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation,java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldType)"
  langs:
  - "java"
  name: "IFilterExpressionGenerator"
  nameWithType: "IFilterExpressionGenerator"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
  type: "Interface"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  summary: "Represents a filter expression generator using a language."
  syntax:
    content: "public interface IFilterExpressionGenerator"
- uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateCompoundExpression(java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation,java.lang.String)"
  id: "generateCompoundExpression(java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation,java.lang.String)"
  parent: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
  langs:
  - "java"
  name: "generateCompoundExpression(String leftSideExpression, FieldFilterOperation operation, String rightSideExpression)"
  nameWithType: "IFilterExpressionGenerator.generateCompoundExpression(String leftSideExpression, FieldFilterOperation operation, String rightSideExpression)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateCompoundExpression(String leftSideExpression, FieldFilterOperation operation, String rightSideExpression)"
  overload: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateCompoundExpression*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  summary: "Generates a compound filter expression (A equals 5 and (B equals 8 or C notEquals 0))"
  syntax:
    content: "public abstract String generateCompoundExpression(String leftSideExpression, FieldFilterOperation operation, String rightSideExpression)"
    parameters:
    - id: "leftSideExpression"
      type: "java.lang.String"
      description: "The left side expression."
    - id: "operation"
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation"
      description: "The filter operator."
    - id: "rightSideExpression"
      type: "java.lang.String"
      description: "The right side expression."
    return:
      type: "java.lang.String"
      description: "The filter expression."
- uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateSimpleExpression(java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation,java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldType)"
  id: "generateSimpleExpression(java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation,java.lang.String,com.microsoft.store.partnercenter.models.query.filters.FieldType)"
  parent: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
  langs:
  - "java"
  name: "generateSimpleExpression(String field, FieldFilterOperation operation, String value, FieldType type)"
  nameWithType: "IFilterExpressionGenerator.generateSimpleExpression(String field, FieldFilterOperation operation, String value, FieldType type)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateSimpleExpression(String field, FieldFilterOperation operation, String value, FieldType type)"
  overload: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateSimpleExpression*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  summary: "Generates a simple filter expression."
  syntax:
    content: "public abstract String generateSimpleExpression(String field, FieldFilterOperation operation, String value, FieldType type)"
    parameters:
    - id: "field"
      type: "java.lang.String"
      description: "The filter field."
    - id: "operation"
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation"
      description: "The filter operation."
    - id: "value"
      type: "java.lang.String"
      description: "The filter value."
    - id: "type"
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldType"
      description: "The type of field."
    return:
      type: "java.lang.String"
      description: "The filter expression."
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation"
  name: "FieldFilterOperation"
  nameWithType: "FieldFilterOperation"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldType"
  name: "FieldType"
  nameWithType: "FieldType"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldType"
- uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateSimpleExpression*"
  name: "generateSimpleExpression"
  nameWithType: "IFilterExpressionGenerator.generateSimpleExpression"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateSimpleExpression"
  package: "com.microsoft.store.partnercenter.models.query.filters"
- uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateCompoundExpression*"
  name: "generateCompoundExpression"
  nameWithType: "IFilterExpressionGenerator.generateCompoundExpression"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator.generateCompoundExpression"
  package: "com.microsoft.store.partnercenter.models.query.filters"
