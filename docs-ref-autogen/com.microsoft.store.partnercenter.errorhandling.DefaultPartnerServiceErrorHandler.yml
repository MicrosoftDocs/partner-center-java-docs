### YamlMime:ManagedReference
items:
- uid: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler"
  id: "DefaultPartnerServiceErrorHandler"
  parent: "com.microsoft.store.partnercenter.errorhandling"
  children:
  - "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.DefaultPartnerServiceErrorHandler()"
  - "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse(okhttp3.Response)"
  - "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse(okhttp3.Response,com.microsoft.store.partnercenter.requestcontext.IRequestContext)"
  langs:
  - "java"
  name: "DefaultPartnerServiceErrorHandler"
  nameWithType: "DefaultPartnerServiceErrorHandler"
  fullName: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler"
  type: "Class"
  package: "com.microsoft.store.partnercenter.errorhandling"
  summary: "The default handling policy for failed partner service responses."
  syntax:
    content: "public class DefaultPartnerServiceErrorHandler implements IFailedPartnerServiceResponseHandler"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.microsoft.store.partnercenter.errorhandling.IFailedPartnerServiceResponseHandler"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.DefaultPartnerServiceErrorHandler()"
  id: "DefaultPartnerServiceErrorHandler()"
  parent: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler"
  langs:
  - "java"
  name: "DefaultPartnerServiceErrorHandler()"
  nameWithType: "DefaultPartnerServiceErrorHandler.DefaultPartnerServiceErrorHandler()"
  fullName: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.DefaultPartnerServiceErrorHandler()"
  overload: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.DefaultPartnerServiceErrorHandler*"
  type: "Constructor"
  package: "com.microsoft.store.partnercenter.errorhandling"
  syntax:
    content: "public DefaultPartnerServiceErrorHandler()"
- uid: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse(okhttp3.Response)"
  id: "handleFailedResponse(okhttp3.Response)"
  parent: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler"
  langs:
  - "java"
  name: "handleFailedResponse(Response response)"
  nameWithType: "DefaultPartnerServiceErrorHandler.handleFailedResponse(Response response)"
  fullName: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse(Response response)"
  overload: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.errorhandling"
  summary: "Handles failed partner service responses."
  syntax:
    content: "public PartnerException handleFailedResponse(Response response)"
    parameters:
    - id: "response"
      type: "okhttp3.Response"
      description: "The partner service response."
    return:
      type: "com.microsoft.store.partnercenter.exception.PartnerException"
      description: "The exception to throw."
- uid: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse(okhttp3.Response,com.microsoft.store.partnercenter.requestcontext.IRequestContext)"
  id: "handleFailedResponse(okhttp3.Response,com.microsoft.store.partnercenter.requestcontext.IRequestContext)"
  parent: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler"
  langs:
  - "java"
  name: "handleFailedResponse(Response response, IRequestContext context)"
  nameWithType: "DefaultPartnerServiceErrorHandler.handleFailedResponse(Response response, IRequestContext context)"
  fullName: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse(Response response, IRequestContext context)"
  overload: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.errorhandling"
  summary: "Handles failed partner service responses."
  syntax:
    content: "public PartnerException handleFailedResponse(Response response, IRequestContext context)"
    parameters:
    - id: "response"
      type: "okhttp3.Response"
      description: "The partner service response."
    - id: "context"
      type: "com.microsoft.store.partnercenter.requestcontext.IRequestContext"
      description: "An optional partner context."
    return:
      type: "com.microsoft.store.partnercenter.exception.PartnerException"
      description: "The exception to throw."
references:
- uid: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.DefaultPartnerServiceErrorHandler*"
  name: "DefaultPartnerServiceErrorHandler"
  nameWithType: "DefaultPartnerServiceErrorHandler.DefaultPartnerServiceErrorHandler"
  fullName: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.DefaultPartnerServiceErrorHandler"
  package: "com.microsoft.store.partnercenter.errorhandling"
- uid: "okhttp3.Response"
  spec.java:
  - uid: "okhttp3.Response"
    name: "Response"
    fullName: "okhttp3.Response"
- uid: "com.microsoft.store.partnercenter.exception.PartnerException"
  name: "PartnerException"
  nameWithType: "PartnerException"
  fullName: "com.microsoft.store.partnercenter.exception.PartnerException"
- uid: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse*"
  name: "handleFailedResponse"
  nameWithType: "DefaultPartnerServiceErrorHandler.handleFailedResponse"
  fullName: "com.microsoft.store.partnercenter.errorhandling.DefaultPartnerServiceErrorHandler.handleFailedResponse"
  package: "com.microsoft.store.partnercenter.errorhandling"
- uid: "com.microsoft.store.partnercenter.requestcontext.IRequestContext"
  name: "IRequestContext"
  nameWithType: "IRequestContext"
  fullName: "com.microsoft.store.partnercenter.requestcontext.IRequestContext"
- uid: "com.microsoft.store.partnercenter.errorhandling.IFailedPartnerServiceResponseHandler"
  name: "IFailedPartnerServiceResponseHandler"
  nameWithType: "IFailedPartnerServiceResponseHandler"
  fullName: "com.microsoft.store.partnercenter.errorhandling.IFailedPartnerServiceResponseHandler"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
