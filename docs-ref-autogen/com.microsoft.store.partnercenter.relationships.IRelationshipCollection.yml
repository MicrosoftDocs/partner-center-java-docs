### YamlMime:ManagedReference
items:
- uid: com.microsoft.store.partnercenter.relationships.IRelationshipCollection
  id: IRelationshipCollection
  parent: com.microsoft.store.partnercenter.relationships
  children:
  - com.microsoft.store.partnercenter.relationships.IRelationshipCollection.get(PartnerRelationshipType)
  - com.microsoft.store.partnercenter.relationships.IRelationshipCollection.Query(PartnerRelationshipType,IQuery)
  href: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.yml
  langs:
  - java
  name: IRelationshipCollection
  nameWithType: IRelationshipCollection
  fullName: com.microsoft.store.partnercenter.relationships.IRelationshipCollection
  type: Interface
  source:
    remote: &o0
      path: src/main/java/com/microsoft/store/partnercenter/relationships/IRelationshipCollection.java
      branch: master
      repo: https://github.com/microsoft/Partner-Center-Java
    path: src/main/java/com/microsoft/store/partnercenter/relationships/IRelationshipCollection.java
    startLine: 14
  package: com.microsoft.store.partnercenter.relationships
  summary: "<p>This interface represents the operations that can be done on a partner's relationships. </p>"
  syntax:
    content: public interface IRelationshipCollection extends IPartnerComponentString
  inheritedMembers:
  - com.microsoft.store.partnercenter.IPartnerComponent.getContext()
  - com.microsoft.store.partnercenter.IPartnerComponent.getPartner()
- uid: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.get(PartnerRelationshipType)
  id: get(PartnerRelationshipType)
  parent: com.microsoft.store.partnercenter.relationships.IRelationshipCollection
  href: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.yml
  langs:
  - java
  name: get(PartnerRelationshipType partnerRelationshipType)
  nameWithType: IRelationshipCollection.get(PartnerRelationshipType partnerRelationshipType)
  fullName: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.get(PartnerRelationshipType partnerRelationshipType)
  overload: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.get*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/store/partnercenter/relationships/IRelationshipCollection.java
    startLine: 23
  package: com.microsoft.store.partnercenter.relationships
  summary: "<p>Retrieves all the partner relationships.</p>\r\n<p></p>"
  syntax:
    content: public ResourceCollection<PartnerRelationship> get(PartnerRelationshipType partnerRelationshipType)
    parameters:
    - id: partnerRelationshipType
      type: com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipType
      description: <p>The type of partner relationship. </p>
    return:
      type: com.microsoft.store.partnercenter.models.ResourceCollection78504a52com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipa08ddfce
      description: <p>The available partner relationships. </p>
- uid: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.Query(PartnerRelationshipType,IQuery)
  id: Query(PartnerRelationshipType,IQuery)
  parent: com.microsoft.store.partnercenter.relationships.IRelationshipCollection
  href: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.yml
  langs:
  - java
  name: Query(PartnerRelationshipType partnerRelationshipType, IQuery query)
  nameWithType: IRelationshipCollection.Query(PartnerRelationshipType partnerRelationshipType, IQuery query)
  fullName: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.Query(PartnerRelationshipType partnerRelationshipType, IQuery query)
  overload: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.Query*
  type: Method
  source:
    remote: *o0
    path: src/main/java/com/microsoft/store/partnercenter/relationships/IRelationshipCollection.java
    startLine: 32
  package: com.microsoft.store.partnercenter.relationships
  summary: "<p>Queries partner relationships associated to the partner.</p>\r\n<p></p>"
  syntax:
    content: public ResourceCollection<PartnerRelationship> Query(PartnerRelationshipType partnerRelationshipType, IQuery query)
    parameters:
    - id: partnerRelationshipType
      type: com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipType
      description: <p>The type of partner relationship. </p>
    - id: query
      type: com.microsoft.store.partnercenter.models.query.IQuery
      description: <p>A query to apply onto partner relationships. </p>
    return:
      type: com.microsoft.store.partnercenter.models.ResourceCollection78504a52com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipa08ddfce
      description: <p>TThe partner relationships that match the given query. </p>
references:
- uid: com.microsoft.store.partnercenter.models.ResourceCollection78504a52com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipa08ddfce
  spec.java:
  - uid: com.microsoft.store.partnercenter.models.ResourceCollection
    name: ResourceCollection
    fullName: com.microsoft.store.partnercenter.models.ResourceCollection
    href: com.microsoft.store.partnercenter.models.ResourceCollection.yml
  - name: <
    fullName: <
  - uid: com.microsoft.store.partnercenter.models.relationships.PartnerRelationship
    name: PartnerRelationship
    fullName: com.microsoft.store.partnercenter.models.relationships.PartnerRelationship
    href: com.microsoft.store.partnercenter.models.relationships.PartnerRelationship.yml
  - name: '>'
    fullName: '>'
- uid: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.get*
  name: get
  nameWithType: IRelationshipCollection.get
  fullName: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.get
  package: com.microsoft.store.partnercenter.relationships
- uid: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.Query*
  name: Query
  nameWithType: IRelationshipCollection.Query
  fullName: com.microsoft.store.partnercenter.relationships.IRelationshipCollection.Query
  package: com.microsoft.store.partnercenter.relationships
- uid: com.microsoft.store.partnercenter.IPartnerComponent.getContext()
  parent: com.microsoft.store.partnercenter.IPartnerComponent
  href: com.microsoft.store.partnercenter.IPartnerComponent.yml
  name: getContext()
  nameWithType: IPartnerComponent<TContext>.getContext()
  fullName: com.microsoft.store.partnercenter.IPartnerComponent<TContext>.getContext()
  type: Method
  summary: "<p>Gets the component context object.</p>\r\n<p></p>"
  syntax:
    content: public TContext getContext()
    return:
      type: 473af9dd
      description: <p>The component context object. </p>
- uid: com.microsoft.store.partnercenter.IPartnerComponent.getPartner()
  parent: com.microsoft.store.partnercenter.IPartnerComponent
  href: com.microsoft.store.partnercenter.IPartnerComponent.yml
  name: getPartner()
  nameWithType: IPartnerComponent<TContext>.getPartner()
  fullName: com.microsoft.store.partnercenter.IPartnerComponent<TContext>.getPartner()
  type: Method
  summary: "<p>Gets a reference to the partner operations instance that generated this component.</p>\r\n<p></p>"
  syntax:
    content: public IPartner getPartner()
    return:
      type: com.microsoft.store.partnercenter.IPartner
      description: <p>A reference to the partner operations instance that generated this component. </p>
- uid: com.microsoft.store.partnercenter.IPartnerComponentString
  parent: com.microsoft.store.partnercenter
  href: com.microsoft.store.partnercenter.IPartnerComponentString.yml
  name: IPartnerComponentString
  nameWithType: IPartnerComponentString
  fullName: com.microsoft.store.partnercenter.IPartnerComponentString
  type: Interface
  summary: "<p>Represents a partner SDK component. The type of the component's context object. </p>"
  syntax:
    content: public interface IPartnerComponentString extends IPartnerComponent<String>
- uid: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations
  parent: com.microsoft.store.partnercenter.relationships
  href: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations.yml
  name: RelationshipCollectionOperations
  nameWithType: RelationshipCollectionOperations
  fullName: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations
  type: Class
  summary: "<p>The relationship collection implementation. </p>"
  syntax:
    content: public class RelationshipCollectionOperations
- uid: com.microsoft.store.partnercenter.models.ResourceCollection
  parent: com.microsoft.store.partnercenter.models
  href: com.microsoft.store.partnercenter.models.ResourceCollection.yml
  name: ResourceCollection<TResource>
  nameWithType: ResourceCollection<TResource>
  fullName: com.microsoft.store.partnercenter.models.ResourceCollection<TResource>
  type: Class
  summary: "<p>Contains a collection of resources with JSON properties to represent the output Type of objects in collection </p>"
  syntax:
    content: public class ResourceCollection<TResource>
    typeParameters:
    - id: TResource
      type: 2e0a99c8
- uid: com.microsoft.store.partnercenter.models.relationships.PartnerRelationship
  parent: com.microsoft.store.partnercenter.models.relationships
  href: com.microsoft.store.partnercenter.models.relationships.PartnerRelationship.yml
  name: PartnerRelationship
  nameWithType: PartnerRelationship
  fullName: com.microsoft.store.partnercenter.models.relationships.PartnerRelationship
  type: Class
  summary: "<p>This represents a relationship between two partners. </p>"
  syntax:
    content: public class PartnerRelationship
- uid: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations.get(PartnerRelationshipType)
  parent: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations
  href: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations.yml
  name: get(PartnerRelationshipType partnerRelationshipType)
  nameWithType: RelationshipCollectionOperations.get(PartnerRelationshipType partnerRelationshipType)
  fullName: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations.get(PartnerRelationshipType partnerRelationshipType)
  type: Method
  summary: "<p>Retrieves all the partner relationships.</p>\r\n<p></p>"
  syntax:
    content: public ResourceCollection<PartnerRelationship> get(PartnerRelationshipType partnerRelationshipType)
    parameters:
    - id: partnerRelationshipType
      type: com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipType
      description: <p>The type of partner relationship. </p>
    return:
      type: com.microsoft.store.partnercenter.models.ResourceCollection78504a52com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipa08ddfce
      description: <p>The available partner relationships. </p>
- uid: com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipType
  parent: com.microsoft.store.partnercenter.models.relationships
  href: com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipType.yml
  name: PartnerRelationshipType
  nameWithType: PartnerRelationshipType
  fullName: com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipType
  type: Enum
  summary: "<p>The types of relationships between partners for two tier partner scenario. </p>"
  syntax:
    content: public enum PartnerRelationshipType
- uid: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations.Query(PartnerRelationshipType,IQuery)
  parent: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations
  href: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations.yml
  name: Query(PartnerRelationshipType partnerRelationshipType, IQuery query)
  nameWithType: RelationshipCollectionOperations.Query(PartnerRelationshipType partnerRelationshipType, IQuery query)
  fullName: com.microsoft.store.partnercenter.relationships.RelationshipCollectionOperations.Query(PartnerRelationshipType partnerRelationshipType, IQuery query)
  type: Method
  summary: "<p>Queries partner relationships associated to the partner.</p>\r\n<p></p>"
  syntax:
    content: public ResourceCollection<PartnerRelationship> Query(PartnerRelationshipType partnerRelationshipType, IQuery query)
    parameters:
    - id: partnerRelationshipType
      type: com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipType
      description: <p>The type of partner relationship. </p>
    - id: query
      type: com.microsoft.store.partnercenter.models.query.IQuery
      description: <p>A query to apply onto partner relationships. </p>
    return:
      type: com.microsoft.store.partnercenter.models.ResourceCollection78504a52com.microsoft.store.partnercenter.models.relationships.PartnerRelationshipa08ddfce
      description: <p>TThe partner relationships that match the given query. </p>
- uid: com.microsoft.store.partnercenter.models.query.IQuery
  parent: com.microsoft.store.partnercenter.models.query
  href: com.microsoft.store.partnercenter.models.query.IQuery.yml
  name: IQuery
  nameWithType: IQuery
  fullName: com.microsoft.store.partnercenter.models.query.IQuery
  type: Interface
  summary: "<p>Represents a query on an entity. All different queries should implement this contract. </p>"
  syntax:
    content: public interface IQuery
