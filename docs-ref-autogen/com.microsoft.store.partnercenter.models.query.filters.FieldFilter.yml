### YamlMime:ManagedReference
items:
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  id: "FieldFilter"
  parent: "com.microsoft.store.partnercenter.models.query.filters"
  children:
  - "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.FieldFilter()"
  - "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.generateExpression(com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator)"
  - "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getFieldType()"
  - "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getOperator()"
  - "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setFieldType(com.microsoft.store.partnercenter.models.query.filters.FieldType)"
  - "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setOperator(com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation)"
  langs:
  - "java"
  name: "FieldFilter"
  nameWithType: "FieldFilter"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  type: "Class"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  summary: "A base class that represents a filter applied to a field."
  syntax:
    content: "public abstract class FieldFilter"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.FieldFilter()"
  id: "FieldFilter()"
  parent: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  langs:
  - "java"
  name: "FieldFilter()"
  nameWithType: "FieldFilter.FieldFilter()"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.FieldFilter()"
  overload: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.FieldFilter*"
  type: "Constructor"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  syntax:
    content: "public FieldFilter()"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.generateExpression(com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator)"
  id: "generateExpression(com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator)"
  parent: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  langs:
  - "java"
  name: "generateExpression(IFilterExpressionGenerator filterExpressionGenerator)"
  nameWithType: "FieldFilter.generateExpression(IFilterExpressionGenerator filterExpressionGenerator)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.generateExpression(IFilterExpressionGenerator filterExpressionGenerator)"
  overload: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.generateExpression*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  summary: "Generates a filter expression string."
  syntax:
    content: "public abstract String generateExpression(IFilterExpressionGenerator filterExpressionGenerator)"
    parameters:
    - id: "filterExpressionGenerator"
      type: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
      description: "The filter expression generator to use."
    return:
      type: "java.lang.String"
      description: "The filter expression according to the provided generator language."
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getFieldType()"
  id: "getFieldType()"
  parent: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  langs:
  - "java"
  name: "getFieldType()"
  nameWithType: "FieldFilter.getFieldType()"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getFieldType()"
  overload: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getFieldType*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  syntax:
    content: "public FieldType getFieldType()"
    return:
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldType"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getOperator()"
  id: "getOperator()"
  parent: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  langs:
  - "java"
  name: "getOperator()"
  nameWithType: "FieldFilter.getOperator()"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getOperator()"
  overload: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getOperator*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  syntax:
    content: "public FieldFilterOperation getOperator()"
    return:
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setFieldType(com.microsoft.store.partnercenter.models.query.filters.FieldType)"
  id: "setFieldType(com.microsoft.store.partnercenter.models.query.filters.FieldType)"
  parent: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  langs:
  - "java"
  name: "setFieldType(FieldType value)"
  nameWithType: "FieldFilter.setFieldType(FieldType value)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setFieldType(FieldType value)"
  overload: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setFieldType*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  syntax:
    content: "public void setFieldType(FieldType value)"
    parameters:
    - id: "value"
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldType"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setOperator(com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation)"
  id: "setOperator(com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation)"
  parent: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter"
  langs:
  - "java"
  name: "setOperator(FieldFilterOperation value)"
  nameWithType: "FieldFilter.setOperator(FieldFilterOperation value)"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setOperator(FieldFilterOperation value)"
  overload: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setOperator*"
  type: "Method"
  package: "com.microsoft.store.partnercenter.models.query.filters"
  syntax:
    content: "public void setOperator(FieldFilterOperation value)"
    parameters:
    - id: "value"
      type: "com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation"
references:
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.FieldFilter*"
  name: "FieldFilter"
  nameWithType: "FieldFilter.FieldFilter"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.FieldFilter"
  package: "com.microsoft.store.partnercenter.models.query.filters"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation"
  name: "FieldFilterOperation"
  nameWithType: "FieldFilterOperation"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilterOperation"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getOperator*"
  name: "getOperator"
  nameWithType: "FieldFilter.getOperator"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getOperator"
  package: "com.microsoft.store.partnercenter.models.query.filters"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setOperator*"
  name: "setOperator"
  nameWithType: "FieldFilter.setOperator"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setOperator"
  package: "com.microsoft.store.partnercenter.models.query.filters"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldType"
  name: "FieldType"
  nameWithType: "FieldType"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldType"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getFieldType*"
  name: "getFieldType"
  nameWithType: "FieldFilter.getFieldType"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.getFieldType"
  package: "com.microsoft.store.partnercenter.models.query.filters"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setFieldType*"
  name: "setFieldType"
  nameWithType: "FieldFilter.setFieldType"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.setFieldType"
  package: "com.microsoft.store.partnercenter.models.query.filters"
- uid: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
  name: "IFilterExpressionGenerator"
  nameWithType: "IFilterExpressionGenerator"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.IFilterExpressionGenerator"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.generateExpression*"
  name: "generateExpression"
  nameWithType: "FieldFilter.generateExpression"
  fullName: "com.microsoft.store.partnercenter.models.query.filters.FieldFilter.generateExpression"
  package: "com.microsoft.store.partnercenter.models.query.filters"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
